{"version":3,"sources":["component/header/index.js","utils/constants.js","component/chat/index.js","component/chatlist/index.js","component/form/index.js","store/chats/actions.js","api.js","store/messages/actions.js","component/message/index.js","component/messagefield/index.js","component/popup/index.js","component/profile/index.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","store/messages/reducer.js","store/profile/reducer.js","store/chats/reducer.js","store/index.js","index.js"],"names":["Header","name","useSelector","store","profile","AppBar","position","className","Toolbar","to","IconButton","edge","color","AUTHORS","useStyles","makeStyles","root","lastMessage","fontSize","opacity","pictureMobile","width","height","marginRight","pictureDesktop","Chat","props","classes","latestMessageData","chats","latestMessage","ListItem","undefined","chatId","chat","author","alignItems","Avatar","alt","src","picture","Typography","component","variant","classNames","Divider","Index","chatList","List","map","index","Form","onAddMessage","useState","text","setText","input","useRef","useEffect","current","focus","console","log","onSubmit","e","preventDefault","TextField","label","onChange","changedMessage","target","value","fullWidth","inputRef","type","aria-label","ADD_CHAT","LATEST_MESSAGE","chaId","payload","chatBot","newMessage","a","axios","get","headers","response","data","cnt","ADD_MESSAGE","addMessage","message","addMessageWithThunk","dispatch","Message","MessageField","messages","messageList","useParams","useDispatch","handleAddMessage","useCallback","Paper","elevation","InstallPopup","state","isShown","handleShow","setState","handleHide","userAgent","window","navigator","toLowerCase","test","isIos","standalone","this","style","display","onClick","paddingRight","React","Component","Profile","medium","large","first","last","profileData","setProfileData","randomProfile","then","newProfileData","results","App","path","isLocalhost","Boolean","location","hostname","match","convertedVapidKey","base64String","base64","repeat","length","replace","rawData","atob","outputArray","Uint8Array","i","charCodeAt","urlBase64ToUint8Array","process","sendSubscription","subscription","fetch","method","body","JSON","stringify","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","brendon1","yoh1","marina1","persistConfig","key","storage","persistedReducer","persistReducer","combineReducers","action","newChat","createStore","applyMiddleware","thunk","apiMiddleware","persist","persistStore","ReactDOM","render","persistor","loading","document","getElementById","URL","href","origin","addEventListener","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","pushManager","getSubscription","existedSubscription","subscribe","applicationServerKey","userVisibleOnly","newSubscription","Notification","permission","serviceWorkerRegistration"],"mappings":"6dAqCeA,EA3BA,WACX,IAAMC,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAQH,QAEhD,OACI,8BACI,cAACI,EAAA,EAAD,CAAQC,SAAS,SAASC,UAAU,SAApC,SACI,eAACC,EAAA,EAAD,WACI,cAAC,IAAD,CAAMC,GAAG,WAAT,SACI,cAACC,EAAA,EAAD,CAAYC,KAAK,QAAQC,MAAM,UAA/B,SACI,cAAC,IAAD,QAIR,uBAAML,UAAU,OAAhB,UAAwBN,EAAxB,OAEA,cAAC,IAAD,CAAMQ,GAAG,IAAT,SACI,cAACC,EAAA,EAAD,CAAYC,KAAK,QAAQC,MAAM,UAA/B,SACI,cAAC,IAAD,gB,kHC3BfC,EACJ,QADIA,EAEN,MCSDC,EAAYC,aAAW,iBAAO,CAChCC,KAAM,CACFJ,MAAO,WAEXK,YAAa,CACTC,SAAU,OACVC,QAAS,OAEbC,cAAe,CACXC,MAAO,OACPC,OAAQ,OACRC,YAAa,OAEjBC,eAAgB,CACZH,MAAO,OACPC,OAAQ,OACRC,YAAa,YA8CNE,EA1CF,SAACC,GAEV,IAAMC,EAAUb,IACVc,EAAoB1B,aAAY,SAAAC,GAAK,OAAIA,EAAM0B,MAAMC,iBAE3D,OACI,eAACC,EAAA,EAAD,CACIxB,eAAiCyB,IAAtBJ,GAAmCA,EAAkBK,SAAWP,EAAMQ,KAAKD,QAAUL,EAAkBO,SAAWtB,EAAc,cAAgB,GAC3JuB,WAAW,aAFf,UAGI,sBAAK7B,UAAU,SAAf,UAEI,cAAC8B,EAAA,EAAD,CAAQ9B,UAAWoB,EAAQP,cAAekB,IAAKZ,EAAMQ,KAAKjC,KAAMsC,IAAKb,EAAMQ,KAAKM,UAChF,cAACC,EAAA,EAAD,CACIC,UAAU,IACVC,QAAQ,UACR/B,MAAM,UAHV,SAKKc,EAAMQ,KAAKjC,UAIpB,sBAAKM,UAAU,UAAf,UACI,cAAC8B,EAAA,EAAD,CAAQ9B,UAAWoB,EAAQH,eAAgBc,IAAKZ,EAAMQ,KAAKjC,KAAMsC,IAAKb,EAAMQ,KAAKM,UACjF,cAACC,EAAA,EAAD,CACIC,UAAU,OACVC,QAAQ,QACRpC,UAAWoB,EAAQX,KACnBJ,MAAM,UAJV,SAMKc,EAAMQ,KAAKjC,OAEhB,cAACwC,EAAA,EAAD,CACIC,UAAU,OACVnC,UAAWqC,IAAWjB,EAAQX,KAAMW,EAAQV,aAFhD,SAIK,qEAGT,cAAC4B,EAAA,EAAD,CAASF,QAAQ,QAAQD,UAAU,WC5DzC5B,EAAYC,aAAW,iBAAO,CAChCC,KAAM,CACFJ,MAAO,WAEXK,YAAa,CACTC,SAAU,OACVC,QAAS,WAuBF2B,EAnBD,WAEV,IAAMnB,EAAUb,IACVe,EAAQ3B,aAAY,SAAAC,GAAK,OAAIA,EAAM0B,MAAMkB,YAE/C,OACI,cAACC,EAAA,EAAD,CAAMzC,UAAWqC,IAAW,WAAYjB,EAAQX,MAAhD,SACKa,EAAMoB,KACH,SAACf,EAAMgB,GAAP,OACI,8BACI,cAAC,IAAD,CAAMzC,GAAE,iBAAYyB,EAAKD,QAAzB,SACI,cAAC,EAAD,CAAMC,KAAMA,OAFVgB,S,2CCoBfC,EA1CF,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACX,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAQC,mBAuBd,OAVAC,qBAAU,WACNF,EAAMG,QAAQC,UACf,IAEHF,qBAAU,WACN,OAAO,WACHG,QAAQC,IAAI,iBAEjB,IAGC,uBAAMvD,UAAU,aAAawD,SAlBZ,SAACC,GAClBA,EAAEC,iBAEFb,EAAa,CAACjB,OAAQtB,EAAeyC,SACrCC,EAAQ,KAcR,UACI,cAACW,EAAA,EAAD,CACI3D,UAAU,eACV4D,MAAM,UACNC,SA1BgB,SAACC,GACzBd,EAAQc,EAAeC,OAAOC,QA0BtBC,WAAW,EACXD,MAAOjB,EACPmB,SAAUjB,IAEd,cAAC9C,EAAA,EAAD,CAAYgE,KAAK,SAASC,aAAW,OAArC,SACI,cAAC,IAAD,U,iCC1CHC,EAAW,kBACXC,EAAiB,wBAOjB/C,EAAgB,SAACgD,EAAO3C,GAAR,MAAoB,CAC7CuC,KAAMG,EACNE,QAAQ,CAACD,QAAM3C,Y,iBCRZ,SAAe6C,EAAtB,oC,4CAAO,WAAuB/C,EAAQgD,GAA/B,eAAAC,EAAA,sEACoBC,IAAMC,IAAN,6FAAgGnD,EAAhG,gBAA8GgD,EAAW3B,MAAQ,CACpJ+B,QAAS,CACL,kBAAmB,wCACnB,iBAAkB,wDAJvB,cACGC,EADH,yBAOIA,EAASC,KAAKC,KAPlB,4C,kEAUA,sBAAAN,EAAA,sEACUC,IAAMC,IAAN,8BADV,oF,sBCRA,IAAMK,EAAc,wBAEdC,EAAa,SAACT,EAAYhD,GAAb,MAAyB,CAC/CyC,KAAMe,EACNV,QAAS,CACLY,QAASV,EACThD,YAIK2D,EAAsB,SAAtBA,EAAuBX,EAAYhD,GAAb,8CAAwB,WAAO4D,GAAP,SAAAX,EAAA,yDAEvDW,EAASH,EAAWT,EAAYhD,IAE5BgD,EAAW9C,SAAWtB,EAJ6B,wBAKnDgF,EAAS/D,EAAcG,EAAQgD,EAAW9C,SALS,KAMnD0D,EANmD,KAM1CD,EAN0C,KAMb/E,EANa,SAMYmE,EAAQ/C,EAAQgD,GAN5B,yBAMrB9C,OANqB,KAMAmB,KANA,WAM0CrB,EAN1C,gDASnDgD,EAAW9C,SAAWtB,GACtBgF,EAAS/D,EAAcG,EAAQgD,EAAW9C,SAVS,4CAAxB,uDCOpB2D,G,OAjBC,SAACpE,GACb,OAAIA,EAAMiE,QAAQxD,SAAWtB,EAErB,sBAAKN,UAAWqC,IAAW,mBAAoB,gBAA/C,UACI,qBAAKN,IAAK,cAAe/B,UAAU,aAAagC,IAAI,0EACpD,oBAAGhC,UAAU,cAAb,UAA4BmB,EAAMiE,QAAQxD,OAA1C,KAAoDT,EAAMiE,QAAQrC,WAKtE,sBAAK/C,UAAWqC,IAAW,mBAAoB,gBAA/C,UACI,oBAAGrC,UAAW,aAAd,UAA6BmB,EAAMiE,QAAQxD,OAA3C,KAAqDT,EAAMiE,QAAQrC,QACnE,qBAAKhB,IAAK,UAAW/B,UAAW,aAAcgC,IAAI,kGC0BnDwD,GAhCM,WACjB,IAAMC,EAAW9F,aAAY,SAAAC,GAAK,OAAIA,EAAM6F,SAASC,eAC9ChE,EAAUiE,cAAVjE,OACD4D,EAAWM,cAEXC,EAAmBC,uBACrB,SAACpB,GACGY,EAASD,EAAoBX,EAAYhD,MAE7C,CAACA,EAAQ4D,IAGb,OAAK5D,GAAW+D,EAAS/D,GAKrB,eAACqE,EAAA,EAAD,CAAOC,UAAW,EAAGhG,UAAU,UAA/B,UACI,cAAC,EAAD,IACA,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,WAAf,SACKyF,EAAS/D,GAAQgB,KAAI,SAAC0C,EAASzC,GAAV,OAClB,cAAC,EAAD,CAAqByC,QAASA,GAAhBzC,QAGtB,cAAC,EAAD,CAAME,aAAcgD,UAZrB,cAAC,IAAD,CAAU3F,GAAG,O,wDCiBb+F,I,sNAnCXC,MAAQ,CACJC,SAAS,G,EAcbC,WAAa,WACT,EAAKC,SAAS,CAAEF,SAAS,K,EAG7BG,WAAa,WACT,EAAKD,SAAS,CAAEF,SAAS,K,wDAjB7B,YACkB,WACV,IAAMI,EAAYC,OAAOC,UAAUF,UAAUG,cAC7C,MAAO,SAASC,KAAMJ,GAItBK,IAF8B,eAAgBJ,OAAOC,WAAeD,OAAOC,UAAUI,YAGrFC,KAAKV,e,oBAYb,WACI,OACI,qBAAKW,MAAQ,CAAEC,QAASF,KAAKZ,MAAMC,QAAU,QAAU,QAAWnG,UAAU,0BAA5E,SACI,sBAAKA,UAAU,gBAAf,UACI,cAAC,KAAD,CAAOA,UAAU,6BAA6BiH,QAAUH,KAAKR,aAC7D,qBAAKS,MAAQ,CAAEG,aAAc,QAA7B,gZ,GA7BOC,IAAMC,YCgClBC,I,OA9BC,WACZ,MAAsCvE,mBAAS,CAC3Cb,QAAS,CACLqF,OAAQ,GACRC,MAAO,IAEX7H,KAAM,CACF8H,MAAO,GACPC,KAAM,MAPd,mBAAOC,EAAP,KAAoBC,EAApB,KAgBA,OALAxE,qBAAU,YLNP,WAAP,gCKOQyE,GAAgBC,MAAK,SAAAC,GACjBH,EAAeG,EAAe9C,KAAK+C,QAAQ,SAEhD,IAEC,cAAChC,EAAA,EAAD,CAAOC,UAAW,EAAGhG,UAAU,UAA/B,SACI,sBAAKA,UAAU,UAAf,UACI,yCACA,qBAAKA,UAAU,MAAMgC,IAAK0F,EAAYzF,QAAQsF,MAAOxF,IAAI,KACzD,uCAAU2F,EAAYhI,KAAK8H,SAC3B,4CAAeE,EAAYhI,KAAK+H,eCejCO,GAjCH,WAGR,IAAM1C,EAAWM,cAOjB,OALAzC,qBAAU,WACNmC,EAAS/D,EAAc,GAAI,OAE5B,IAGC,sBAAKvB,UAAU,YAAf,UACI,eAAC,IAAD,WACI,cAAC,EAAD,CAAQH,QAAQ,KAChB,eAAC,IAAD,WACI,cAAC,IAAD,CAAOoI,KAAM,WAAb,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,kBAAZ,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOA,KAAM,IAAb,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACI,wDAIZ,cAAC,GAAD,QC7BNC,GAAcC,QACa,cAA7B3B,OAAO4B,SAASC,UAEa,UAA7B7B,OAAO4B,SAASC,UAEhB7B,OAAO4B,SAASC,SAASC,MAAM,2DAiB7BC,GAdwB,SAACC,GAQ3B,IAPA,IAEMC,GAAUD,EAFA,IAAIE,QAAQ,EAAIF,EAAaG,OAAS,GAAK,IAEnBC,QAAQ,MAAO,KAAKA,QAAQ,KAAM,KAEpEC,EAAUrC,OAAOsC,KAAKL,GACtBM,EAAc,IAAIC,WAAWH,EAAQF,QAElCM,EAAI,EAAGA,EAAIJ,EAAQF,SAAUM,EAClCF,EAAYE,GAAKJ,EAAQK,WAAWD,GAExC,OAAOF,EAGeI,CAAsBC,2FAE1CC,GAAmB,SAACC,GACtB,OAAOC,MAAM,GAAD,OAAIH,4CAAJ,4BAA6D,CACrEI,OAAQ,OACRC,KAAMC,KAAKC,UAAUL,GACrBxE,QAAS,CACL,eAAgB,uBAwD5B,SAAS8E,GAAgBC,EAAOC,GAC5BrD,UAAUsD,cACLC,SAASH,GACThC,MAAK,SAACoC,GACHA,EAAaC,cAAgB,WACzB,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACE,cAA3BF,EAAiBjE,QACbO,UAAUsD,cAAcO,YAIxBhH,QAAQC,IACJ,+GAIAuG,GAAUA,EAAOS,UACjBT,EAAOS,SAASN,KAMpB3G,QAAQC,IAAI,sCAERuG,GAAUA,EAAOU,WACjBV,EAAOU,UAAUP,WAOxCQ,OAAM,SAACC,GACJpH,QAAQoH,MAAM,4CAA6CA,MCtIvE,IAYeC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBhD,MAAK,YAAkD,IAA/CiD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,oCCJRO,GAAe,CAClBzF,YAAY,CACR0F,SAAU,CACN,CAACxJ,OAAQtB,EAAeyC,KAAM,SAC9B,CAACnB,OAAQtB,EAAayC,KAAM,aAChCsI,KAAM,CACF,CAACzJ,OAAQtB,EAAeyC,KAAM,SAC9B,CAACnB,OAAQtB,EAAayC,KAAM,eAEhCuI,QAAS,CACL,CAAC1J,OAAQtB,EAAeyC,KAAM,SAC9B,CAACnB,OAAQtB,EAAayC,KAAM,wBCdjCoI,GAAe,CACjBzL,KAAM,cCCJyL,GAAe,CACjB3I,SAAU,CACN,CACId,OAAQ,WACRhC,KAAM,eACNuC,QAAS,mDAEb,CACIP,OAAQ,OACRhC,KAAM,cACNuC,QAAS,+EAEb,CACIP,OAAQ,UACRhC,KAAM,mBACNuC,QAAS,iIAGjBV,cAAe,I,+CCXbgK,GAAgB,CAClBC,IAAK,kBACLC,cAGEC,GAAmBC,aACrBJ,GACAK,aAAgB,CACZtK,MDMuB,WAAmC,IAAlC4E,EAAiC,uDAAzBiF,GAAcU,EAAW,uCAC7D,OAAQA,EAAO1H,MACX,KAAKE,EACD,OAAO,6BACA6B,GADP,IAEI5E,MAAM,GAAD,oBAAM4E,EAAM1D,UAAZ,CAAsBqJ,EAAOrH,QAAQsH,YAGlD,KAAKxH,EACD,OAAO,6BACA4B,GADP,IAEI3E,cAAe,CACXG,OAAQmK,EAAOrH,QAAQD,MACvB3C,OAAQiK,EAAOrH,QAAQ5C,UAInC,QACI,OAAOsE,ICvBXT,SHCuB,WAAmC,IAAlCS,EAAiC,uDAAzBiF,GAAcU,EAAW,uCAC7D,OAAQA,EAAO1H,MACX,KAAKe,EACD,OAAO,6BACAgB,GADP,IAEIR,YAAY,6BACLQ,EAAMR,aADF,mBAENmG,EAAOrH,QAAQ9C,OAFT,uBAGAwE,EAAMR,YAAYmG,EAAOrH,QAAQ9C,SAHjC,CAIHmK,EAAOrH,QAAQY,cAK/B,QACI,OAAOc,IGfXrG,QFfsB,WAA2B,IAA1BqG,EAAyB,uDAAjBiF,GACrC,OAAOjF,MEkBItG,GAAQmM,aAAYL,GAAkBM,aAAgBC,KAAOC,mBAE7DC,GAAUC,aAAaxM,I,SCfpCyM,IAASC,OACL,cAAC,IAAD,CAAU1M,MAAOA,GAAjB,SACI,cAAC,KAAD,CAAa2M,UAAWJ,GAASK,QAAS,KAA1C,SACI,cAAC,GAAD,QAGRC,SAASC,eAAe,SN6BrB,SAAkB5C,GACrB,GAAI,kBAAmBrD,UAAW,CAE9B,GADkB,IAAIkG,IAAIvD,GAAwB5C,OAAO4B,SAASwE,MACpDC,SAAWrG,OAAO4B,SAASyE,OACrC,OAEJrG,OAAOsG,iBAAiB,QAAQ,WAC5B,IAAMjD,EAAK,UAAMT,GAAN,sBACPlB,KAqFhB,SAAiC2B,EAAOC,GAEpCP,MAAMM,EAAO,CACT/E,QAAS,CAAC,iBAAkB,YAE3B+C,MAAK,SAAC9C,GAEH,IAAMgI,EAAchI,EAASD,QAAQD,IAAI,gBAEjB,MAApBE,EAASiI,QACO,MAAfD,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5CxG,UAAUsD,cAAcmD,MAAMrF,MAAK,SAACoC,GAChCA,EAAakD,aAAatF,MAAK,WAC3BrB,OAAO4B,SAASgF,eAKxBxD,GAAgBC,EAAOC,MAG9BW,OAAM,WACHnH,QAAQC,IAAI,oEA5GR8J,CAAwBxD,EAAOC,GAC/BrD,UAAUsD,cAAcmD,MAAMrF,MAAK,SAACoC,GAE3BA,EAAaqD,aAKlBrD,EAAaqD,YAAYC,kBAAkB1F,MAAK,SAAU2F,GAC1B,OAAxBA,GACAlK,QAAQC,IAAI,6CACZ0G,EAAaqD,YAAYG,UAAU,CAC/BC,qBAAsBnF,GACtBoF,iBAAiB,IAClB9F,MAAK,SAAU+F,GACdtK,QAAQC,IAAI,2BACZ8F,GAAiBuE,MAClBnD,OAAM,SAAUhH,GACiB,YAA5BoK,aAAaC,WACbxK,QAAQC,IAAI,+BAEZD,QAAQoH,MAAM,oDAAqDjH,QAI3EH,QAAQC,IAAI,kCACZ8F,GAAiBmE,OAGzBlK,QAAQC,IACJ,4GA1BAD,QAAQC,IAAI,iCAgCpBqG,GAAgBC,EAAOC,OMvEvCiE,GAEApD,O","file":"static/js/main.ef9e631c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport   \"./styles.css\"\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport {Link} from \"react-router-dom\";\r\nimport { useSelector} from 'react-redux'\r\n\r\nconst Header = () => {\r\n    const name = useSelector(store => store.profile.name);\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\" className=\"navBar\">\r\n                <Toolbar>\r\n                    <Link to=\"/profile\">\r\n                        <IconButton edge=\"start\" color=\"inherit\">\r\n                            <AccountCircleIcon/>\r\n                        </IconButton>\r\n                    </Link>\r\n\r\n                    <span className=\"name\">{name} </span>\r\n\r\n                    <Link to=\"/\">\r\n                        <IconButton edge=\"start\" color=\"inherit\">\r\n                            <ChatIcon/>\r\n                        </IconButton>\r\n                    </Link>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Header;","export const AUTHORS = {\r\n  HUMAN: 'human',\r\n  BOT: 'bot',\r\n};\r\n","import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport classNames from \"classnames\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport \"./styles.css\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport {AUTHORS} from \"../../utils/constants\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        color: \"#FFFFFF\"\r\n    },\r\n    lastMessage: {\r\n        fontSize: \"12px\",\r\n        opacity: \"0.6\"\r\n    },\r\n    pictureMobile: {\r\n        width: \"30px\",\r\n        height: \"30px\",\r\n        marginRight: \"8px\"\r\n    },\r\n    pictureDesktop: {\r\n        width: \"50px\",\r\n        height: \"50px\",\r\n        marginRight: \"16px\"\r\n    }\r\n}));\r\n\r\nconst Chat = (props) => {\r\n\r\n    const classes = useStyles();\r\n    const latestMessageData = useSelector(store => store.chats.latestMessage);\r\n\r\n    return (\r\n        <ListItem\r\n            className={latestMessageData !== undefined && latestMessageData.chatId === props.chat.chatId && latestMessageData.author === AUTHORS.BOT ? \"animateChat\" : \"\"}\r\n            alignItems=\"flex-start\">\r\n            <div className=\"mobile\">\r\n\r\n                <Avatar className={classes.pictureMobile} alt={props.chat.name} src={props.chat.picture}/>\r\n                <Typography\r\n                    component=\"p\"\r\n                    variant=\"caption\"\r\n                    color=\"initial\"\r\n                >\r\n                    {props.chat.name}\r\n                </Typography>\r\n            </div>\r\n\r\n            <div className=\"desktop\">\r\n                <Avatar className={classes.pictureDesktop} alt={props.chat.name} src={props.chat.picture}/>\r\n                <Typography\r\n                    component=\"span\"\r\n                    variant=\"body2\"\r\n                    className={classes.root}\r\n                    color=\"initial\"\r\n                >\r\n                    {props.chat.name}\r\n                </Typography>\r\n                <Typography\r\n                    component=\"span\"\r\n                    className={classNames(classes.root, classes.lastMessage)}\r\n                >\r\n                    {\" — I'll be in your neighborhood doing errands this…\"}\r\n                </Typography>\r\n            </div>\r\n            <Divider variant=\"inset\" component=\"hr\"/>\r\n        </ListItem>\r\n    )\r\n}\r\nexport default Chat","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport classNames from 'classnames'\r\nimport {Link} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport Chat from \"../chat\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        color: \"#FFFFFF\",\r\n    },\r\n    lastMessage: {\r\n        fontSize: \"12px\",\r\n        opacity: \"0.6\"\r\n    }\r\n}));\r\n\r\nconst Index = () => {\r\n\r\n    const classes = useStyles();\r\n    const chats = useSelector(store => store.chats.chatList);\r\n\r\n    return (\r\n        <List className={classNames(\"chatList\", classes.root)}>\r\n            {chats.map(\r\n                (chat, index) =>\r\n                    <div key={index}>\r\n                        <Link to={`/chats/${chat.chatId}`}>\r\n                            <Chat chat={chat}/>\r\n                        </Link>\r\n                    </div>\r\n            )}\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default Index;","import React, {useState, useEffect, useRef} from \"react\"\r\nimport  \"./styles.css\"\r\nimport {AUTHORS} from \"../../utils/constants\";\r\nimport {IconButton, TextField} from \"@material-ui/core\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\n\r\nconst Form = ({onAddMessage}) => {\r\n    const [text, setText] = useState(\"\");\r\n    const input = useRef();\r\n\r\n    const handleMessageChange = (changedMessage) => {\r\n        setText(changedMessage.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        onAddMessage({author: AUTHORS.HUMAN, text});\r\n        setText('');\r\n    }\r\n\r\n    useEffect(() => {\r\n        input.current.focus();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            console.log('unmounting');\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <form className=\"messageBar\" onSubmit={handleSubmit}>\r\n            <TextField\r\n                className=\"inputMessage\"\r\n                label=\"Message\"\r\n                onChange={handleMessageChange}\r\n                fullWidth={true}\r\n                value={text}\r\n                inputRef={input}\r\n            />\r\n            <IconButton type=\"submit\" aria-label=\"send\">\r\n                <SendIcon/>\r\n            </IconButton>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form","export const ADD_CHAT = \"CHATS::ADD_CHAT\";\r\nexport const LATEST_MESSAGE = \"CHATS::LATEST_MESSAGE\";\r\n\r\nexport const addChat = (newChat) => ({\r\n    type: ADD_CHAT,\r\n    payload:newChat,\r\n});\r\n\r\nexport const latestMessage = (chaId, author) => ({\r\n    type: LATEST_MESSAGE,\r\n    payload:{chaId,author},\r\n});\r\n","import axios from 'axios'\r\n\r\nexport async function chatBot(chatId, newMessage) {\r\n    const response = await axios.get(`https://acobot-brainshop-ai-v1.p.rapidapi.com/get?bid=178&key=sX5A2PcYZbsN5EY6&uid=${chatId}&msg=${newMessage.text}`, {\r\n        headers: {\r\n            \"x-rapidapi-host\": \"acobot-brainshop-ai-v1.p.rapidapi.com\",\r\n            \"x-rapidapi-key\": \"18edf81068msh90ed868beeb69eep118634jsn934c9c3ee307\"\r\n        }\r\n    });\r\n    return response.data.cnt\r\n}\r\n\r\nexport async function randomProfile() {\r\n    return await axios.get(`https://randomuser.me/api/`);\r\n}\r\n\r\n","import {latestMessage} from \"../chats/actions\";\r\nimport {AUTHORS} from \"../../utils/constants\";\r\nimport {chatBot} from \"../../api\";\r\n\r\nexport const ADD_MESSAGE = \"MESSAGES::ADD_MESSAGE\";\r\n\r\nexport const addMessage = (newMessage, chatId) => ({\r\n    type: ADD_MESSAGE,\r\n    payload: {\r\n        message: newMessage,\r\n        chatId,\r\n    },\r\n});\r\n\r\nexport const addMessageWithThunk = (newMessage, chatId) => async (dispatch) => {\r\n\r\n    dispatch(addMessage(newMessage, chatId));\r\n\r\n    if (newMessage.author !== AUTHORS.BOT) {\r\n        dispatch(latestMessage(chatId, newMessage.author));\r\n        dispatch(addMessageWithThunk({author: AUTHORS.BOT, text: await chatBot(chatId, newMessage)}, chatId))\r\n    }\r\n\r\n    if (newMessage.author === AUTHORS.BOT) {\r\n        dispatch(latestMessage(chatId, newMessage.author));\r\n    }\r\n\r\n};\r\n","import React from \"react\";\r\nimport   \"./styles.css\"\r\nimport classNames from 'classnames'\r\nimport {AUTHORS} from \"../../utils/constants\";\r\nconst Message = (props) => {\r\n    if (props.message.author !== AUTHORS.BOT) {\r\n        return (\r\n            <div className={classNames(\"messageContainer\", \"youContainer\")}>\r\n                <img alt={\"profile-img\"} className=\"messageImg\" src=\"https://upload.wikimedia.org/wikipedia/commons/8/82/Damon_cropped.jpg\"/>\r\n                <p className=\"yourMessage\">{props.message.author}: {props.message.text}</p>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className={classNames(\"messageContainer\", \"botContainer\")}>\r\n                <p className={\"botMessage\"}>{props.message.author}: {props.message.text}</p>\r\n                <img alt={\"bot-img\"} className={\"messageImg\"} src=\"https://images-na.ssl-images-amazon.com/images/G/01/toys/detail-page/B001E95SQ2-1-lg.jpg\"/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Message; ","import React, {useCallback} from \"react\";\r\nimport \"./styles.css\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ChatList from \"../chatlist\";\r\nimport Form from \"../form\"\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\nimport {addMessageWithThunk} from \"../../store/messages/actions\";\r\nimport Message from \"../message\";\r\n\r\nconst MessageField = () => {\r\n    const messages = useSelector(store => store.messages.messageList);\r\n    const {chatId} = useParams();\r\n    const dispatch = useDispatch();\r\n\r\n    const handleAddMessage = useCallback(\r\n        (newMessage) => {\r\n            dispatch(addMessageWithThunk(newMessage, chatId));\r\n        },\r\n        [chatId, dispatch]\r\n    );\r\n\r\n    if (!chatId || !messages[chatId]) {\r\n        return <Redirect to=\"/\"/>;\r\n    }\r\n\r\n    return (\r\n        <Paper elevation={1} className=\"chatBox\">\r\n            <ChatList/>\r\n            <div className=\"messageField\">\r\n                <div className=\"messages\">\r\n                    {messages[chatId].map((message, index) =>\r\n                        <Message key={index} message={message}/>\r\n                    )}\r\n                </div>\r\n                <Form onAddMessage={handleAddMessage}/>\r\n            </div>\r\n\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default MessageField;\r\n","import React from 'react';\r\nimport Close from '@material-ui/icons/Close';\r\nimport './styles.css';\r\n\r\nclass InstallPopup extends React.Component {\r\n    state = {\r\n        isShown: false,\r\n    };\r\n    componentDidMount() {\r\n        const isIos = () => {\r\n            const userAgent = window.navigator.userAgent.toLowerCase();\r\n            return /iphone/.test( userAgent );\r\n        };\r\n        const isInStandaloneMode = () => ('standalone' in window.navigator) && (window.navigator.standalone);\r\n\r\n        if (isIos() && !isInStandaloneMode()) {\r\n            this.handleShow();\r\n        }\r\n    }\r\n\r\n    handleShow = () => {\r\n        this.setState({ isShown: true });\r\n    };\r\n\r\n    handleHide = () => {\r\n        this.setState({ isShown: false });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={ { display: this.state.isShown ? 'block' : 'none' } } className=\"speech-bubble-container\">\r\n                <div className=\"speech-bubble\">\r\n                    <Close className=\"close-install-message-icon\" onClick={ this.handleHide } />\r\n                    <div style={ { paddingRight: '15px' } }>Установи приложение на свой iPhone: нажми «Поделиться», а затем на экран «Домой»</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InstallPopup;","import React from \"react\"\r\nimport {useEffect, useState} from \"react\"\r\nimport \"./styles.css\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {randomProfile} from \"../../api\";\r\n\r\nconst Profile = () => {\r\n    const [profileData, setProfileData] = useState({\r\n        picture: {\r\n            medium: \"\",\r\n            large: \"\"\r\n        },\r\n        name: {\r\n            first: \"\",\r\n            last: \"\"\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        randomProfile().then(newProfileData => {\r\n            setProfileData(newProfileData.data.results[0]);\r\n        })\r\n    }, []);\r\n    return (\r\n        <Paper elevation={1} className=\"profile\">\r\n            <div className=\"content\">\r\n                <h1>Profile</h1>\r\n                <img className=\"img\" src={profileData.picture.large} alt=\"\"/>\r\n                <p>Name: {profileData.name.first}</p>\r\n                <p>Last Name: {profileData.name.last}</p>\r\n\r\n            </div>\r\n        </Paper>\r\n    )\r\n};\r\n\r\nexport default Profile","import React, {useEffect} from 'react';\nimport Header from \"./component/header\";\nimport \"./App.css\";\nimport MessageField from \"./component/messagefield\";\nimport ChatList from \"./component/chatlist\";\nimport PopUp from \"./component/popup\";\nimport Profile from \"./component/profile\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport {useDispatch} from \"react-redux\";\nimport {latestMessage} from \"./store/chats/actions\";\n\nconst App = () => {\n\n    //reset lastMessage\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(latestMessage(\"\", \"\"))\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return (\n        <div className=\"container\">\n            <Router>\n                <Header profile=\"\"/>\n                <Switch>\n                    <Route path={\"/profile\"}>\n                        <Profile/>\n                    </Route>\n                    <Route path=\"/chats/:chatId?\">\n                        <MessageField/>\n                    </Route>\n                    <Route path={\"/\"}>\n                        <ChatList/>\n                    </Route>\n                    <Route path=\"*\">\n                        <div>Not Found 404</div>\n                    </Route>\n                </Switch>\n            </Router>\n            <PopUp/>\n        </div>\n    )\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nconst urlBase64ToUint8Array = (base64String) => {\n    const padding = \"=\".repeat((4 - base64String.length % 4) % 4)\n    // eslint-disable-next-line\n    const base64 = (base64String + padding).replace(/\\-/g, \"+\").replace(/_/g, \"/\")\n\n    const rawData = window.atob(base64)\n    const outputArray = new Uint8Array(rawData.length)\n\n    for (let i = 0; i < rawData.length; ++i) {\n        outputArray[i] = rawData.charCodeAt(i)\n    }\n    return outputArray\n}\n\nconst convertedVapidKey = urlBase64ToUint8Array(process.env.REACT_APP_PUBLIC_VAPID_KEY)\n\nconst sendSubscription = (subscription) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/notifications/subscribe`, {\n        method: 'POST',\n        body: JSON.stringify(subscription),\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    })\n}\n\nexport function register(config) {\n    if ('serviceWorker' in navigator) {\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            return;\n        }\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n            if (isLocalhost) {\n                checkValidServiceWorker(swUrl, config);\n                navigator.serviceWorker.ready.then((registration) => {\n\n                    if (!registration.pushManager) {\n                        console.log('Push manager unavailable.')\n                        return\n                    }\n\n                    registration.pushManager.getSubscription().then(function (existedSubscription) {\n                        if (existedSubscription === null) {\n                            console.log('No subscription detected, make a request.')\n                            registration.pushManager.subscribe({\n                                applicationServerKey: convertedVapidKey,\n                                userVisibleOnly: true,\n                            }).then(function (newSubscription) {\n                                console.log('New subscription added.')\n                                sendSubscription(newSubscription)\n                            }).catch(function (e) {\n                                if (Notification.permission !== 'granted') {\n                                    console.log('Permission was not granted.')\n                                } else {\n                                    console.error('An error ocurred during the subscription process.', e)\n                                }\n                            })\n                        } else {\n                            console.log('Existed subscription detected.')\n                            sendSubscription(existedSubscription)\n                        }\n                    })\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://cra.link/PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://cra.link/PWA.'\n                            );\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'},\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {ADD_MESSAGE} from \"./actions\";\r\nimport {AUTHORS} from \"../../utils/constants\"\r\n\r\nconst initialState = {\r\n   messageList:{\r\n       brendon1: [\r\n           {author: AUTHORS.HUMAN, text: \"Hello\"},\r\n           {author: AUTHORS.BOT, text: \"Hey yow!\"}],\r\n       yoh1: [\r\n           {author: AUTHORS.HUMAN, text: \"Hello\"},\r\n           {author: AUTHORS.BOT, text: \"Hola q tal\"}\r\n       ],\r\n       marina1: [\r\n           {author: AUTHORS.HUMAN, text: \"Hello\"},\r\n           {author: AUTHORS.BOT, text: \"My name is Marina\"}\r\n       ]\r\n   }\r\n};\r\n\r\nexport const messagesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                messageList: {\r\n                    ...state.messageList,\r\n                    [action.payload.chatId]: [\r\n                        ...state.messageList[action.payload.chatId],\r\n                        action.payload.message,\r\n                    ],\r\n                },\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};","const initialState = {\r\n    name: \"Matt Damon\"\r\n};\r\n \r\nexport const profileReducer = (state = initialState) => {\r\n  return state\r\n};","import {ADD_CHAT, LATEST_MESSAGE} from \"./actions\";\r\n\r\nconst initialState = {\r\n    chatList: [\r\n        {\r\n            chatId: \"brendon1\",\r\n            name: \"Brendon Urie\",\r\n            picture: \"https://pbs.twimg.com/media/EzHjJGOXAAIpTWb.jpg\"\r\n        },\r\n        {\r\n            chatId: \"yoh1\",\r\n            name: \"Yoh Asakura\",\r\n            picture: \"https://s4.anilist.co/file/anilistcdn/character/large/b167-mVViZcSWQxDn.png\"\r\n        },\r\n        {\r\n            chatId: \"marina1\",\r\n            name: \"Marina Diamandis\",\r\n            picture: \"https://upload.wikimedia.org/wikipedia/commons/a/ad/Marina_Diamandis_%2814091068631%29_%28cropped%29_at_Fendi_close_crop.jpg\"\r\n        }\r\n    ],\r\n    latestMessage: {}\r\n};\r\n\r\nexport const chatListReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_CHAT:\r\n            return {\r\n                ...state,\r\n                chats: [...state.chatList, action.payload.newChat]\r\n            }\r\n\r\n        case LATEST_MESSAGE:\r\n            return {\r\n                ...state,\r\n                latestMessage: {\r\n                    chatId: action.payload.chaId,\r\n                    author: action.payload.author\r\n                }\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n};","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {messagesReducer} from \"./messages/reducer\";\r\nimport {profileReducer} from \"./profile/reducer\";\r\nimport {chatListReducer} from \"./chats/reducer\";\r\nimport {persistReducer, persistStore} from 'redux-persist'\r\nimport thunk from 'redux-thunk';\r\nimport storage from 'redux-persist/lib/storage'\r\nimport {apiMiddleware} from 'redux-api-middleware';\r\n\r\nconst persistConfig = {\r\n    key: \"marinaMessenger\",\r\n    storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(\r\n    persistConfig,\r\n    combineReducers({\r\n        chats: chatListReducer,\r\n        messages: messagesReducer,\r\n        profile: profileReducer\r\n    })\r\n);\r\n\r\nexport const store = createStore(persistedReducer, applyMiddleware(thunk, apiMiddleware));\r\n\r\nexport const persist = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux'\nimport {persist, store} from './store'\nimport {PersistGate} from \"redux-persist/integration/react\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate persistor={persist} loading={null}>\n            <App/>\n        </PersistGate>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\nserviceWorkerRegistration.register();\n\nreportWebVitals();\n"],"sourceRoot":""}